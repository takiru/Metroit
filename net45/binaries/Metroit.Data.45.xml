<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Metroit.Data.45</name>
    </assembly>
    <members>
        <member name="T:Metroit.Data.Common.DatabaseType">
            <summary>
            既知のデータベース種類を定義します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.Ole">
            <summary>
            OLE を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.MsSql">
            <summary>
            SQL Server を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.Oracle">
            <summary>
            ODP.NET を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.OracleManaged">
            <summary>
            ODP.NET Managed を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.MySql">
            <summary>
            MySQL を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.Npgsql">
            <summary>
            PostgreSQL を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.Db2">
            <summary>
            DB2 を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.Sqlite">
            <summary>
            SQLite を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.Firebird">
            <summary>
            Firebird を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.Common.DatabaseType.HirDB">
            <summary>
            HiRDB を示します。
            </summary>
        </member>
        <member name="T:Metroit.Data.Common.MetDbProviderFactories">
            <summary>
            DbProviderFactory クラスの1つ以上のインスタンスを作成するための静的メソッドのセットを表します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Common.MetDbProviderFactories.GetFactory(Metroit.Data.Common.DatabaseType)">
            <summary>
            データベース種類から DbProviderFactory のインスタンスを返します。
            </summary>
            <param name="databaseType">データベース種類。</param>
            <returns>DbProviderFactory オブジェクト。</returns>
        </member>
        <member name="T:Metroit.Data.Common.OleEngine">
            <summary>
            OLEDBエンジンの種類を定義します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.OleEngine.JetOleDb40">
            <summary>
            Microsoft.Jet.OLEDB.4.0 を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.OleEngine.AceOleDb120">
            <summary>
            Microsoft.ACE.OLEDB.12.0 を示します。
            </summary>
        </member>
        <member name="T:Metroit.Data.Common.DbProviderName">
            <summary>
            既知のデータベースプロバイダーの不変名を定義します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.Ole">
            <summary>
            System.Data.OleDb を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.MsSql">
            <summary>
            System.Data.SqlClient を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.Oracle">
            <summary>
            Oracle.DataAccess.Client を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.OracleManaged">
            <summary>
            Oracle.ManagedDataAccess.Client を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.MySql">
            <summary>
            MySql.Data.MySqlClient を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.Npgsql">
            <summary>
            Npgsql を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.Db2">
            <summary>
            IBM.Data.DB2 を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.Sqlite">
            <summary>
            System.Data.SQLite を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.Firebird">
            <summary>
            FirebirdSql.Data.FirebirdClient を示します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Common.DbProviderName.HirDB">
            <summary>
            Hitachi.HiRDB を示します。
            </summary>
        </member>
        <member name="T:Metroit.Data.Extensions.DataRowCollectionExtensions">
            <summary>
            DataRowCollection クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DataRowCollectionExtensions.AddEntity(System.Data.DataRowCollection,System.Object)">
            <summary>
            指定したオブジェクトを DataRowCollection オブジェクトに追加します。
            </summary>
            <param name="dataRowCollection">DataRowCollection オブジェクト。</param>
            <param name="entity">エンティティクラスオブジェクト。</param>
        </member>
        <member name="M:Metroit.Data.Extensions.DataRowCollectionExtensions.AddRangeEntity(System.Data.DataRowCollection,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            指定したコレクションを DataRowCollection オブジェクトに追加します。
            </summary>
            <param name="dataRowCollection">DataRowCollection オブジェクト。</param>
            <param name="collection">コレクションオブジェクト。</param>
        </member>
        <member name="T:Metroit.Data.Extensions.DataRowExtensions">
            <summary>
            DataRow クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DataRowExtensions.ToEntity``1(System.Data.DataRow,System.Func{Metroit.Data.Extensions.ShouldDataRowImportArgs,System.Boolean})">
            <summary>
            DataRow をエンティティクラスに変換します。
            </summary>
            <typeparam name="T">エンティティクラス。</typeparam>
            <param name="dataRow">DataRow オブジェクト。</param>
            <param name="shouldImport">値を設定すべきかどうかを判断する式。</param>
            <returns>エンティティクラスオブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DataRowExtensions.FromEntity(System.Data.DataRow,System.Object,System.Func{Metroit.Data.Extensions.ShouldDataRowImportArgs,System.Boolean})">
            <summary>
            指定したオブジェクトの値を DataRow オブジェクトに設定します。
            </summary>
            <param name="dataRow">DataRow オブジェクト。</param>
            <param name="entity">エンティティクラスオブジェクト。</param>
            <param name="shouldImport">値を設定すべきかどうかを判断する式。</param>
        </member>
        <member name="T:Metroit.Data.Extensions.DataReaderExtensions">
            <summary>
            IDataReader クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DataReaderExtensions.ToEntity``1(System.Data.IDataReader,System.Func{Metroit.Data.Extensions.ShouldDataRowImportArgs,System.Boolean})">
            <summary>
            IDataReader の現在のレコードをエンティティクラスに変換します。
            </summary>
            <typeparam name="T">エンティティクラス。</typeparam>
            <param name="dataReader">IDataReader オブジェクト。</param>
            <param name="shouldImport">値を設定すべきかどうかを判断する式。</param>
            <returns>エンティティクラスオブジェクト。</returns>
        </member>
        <member name="T:Metroit.Data.Extensions.DataTableExtensions">
            <summary>
            DataTable クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DataTableExtensions.AsEnumerableEntity``1(System.Data.DataTable,System.Func{Metroit.Data.Extensions.ShouldDataRowImportArgs,System.Boolean})">
            <summary>
            DataRow をエンティティクラスに変換します。
            </summary>
            <typeparam name="T">エンティティクラス。</typeparam>
            <param name="dataTable">DataTable オブジェクト。</param>
            <param name="shouldImport">値を設定すべきかどうかを判断する式。</param>
            <returns>エンティティクラスオブジェクト。</returns>
        </member>
        <member name="T:Metroit.Data.Extensions.DbCommandExtensions">
            <summary>
            DbCommand クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.Fill(System.Data.Common.DbCommand,System.Data.DataTable,System.Boolean,System.Boolean)">
            <summary>
            <para>DbCommand の実行結果を DataTable へ投入します。</para>
            <para>スキーマ情報をマッピングする場合は mapppingSchema を true にします。</para>
            <para>各更新コマンドを生成する場合は createCommand を true にします。</para>
            <para>mappingSchema, createCommand は単一テーブルの操作の時のみ有効です。サブクエリによる単一テーブルの操作も有効にはなりません。</para>
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="dataTable">DataTable オブジェクト。</param>
            <param name="schemaMapping">スキーマ情報のマッピングを行うかどうか。</param>
            <param name="commandCreate">各更新コマンドの生成を行うかどうか。</param>
            <returns>DbDataAdapter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.FillToDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Boolean,System.Boolean)">
            <summary>
            <para>DbCommand の実行結果を DataSet へ投入します。</para>
            <para>スキーマ情報をマッピングする場合は mapppingSchema を true にします。</para>
            <para>各更新コマンドを生成する場合は createCommand を true にします。</para>
            <para>mappingSchema, createCommand は単一テーブルの操作の時のみ有効です。サブクエリによる単一テーブルの操作も有効にはなりません。</para>
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="dataSet">DataSet オブジェクト。</param>
            <param name="tableName">テーブル名。</param>
            <param name="schemaMapping">スキーマ情報のマッピングを行うかどうか。</param>
            <param name="commandCreate">各更新コマンドの生成を行うかどうか。</param>
            <returns>DbDataAdapter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.GetProcedureResult(System.Data.Common.DbCommand)">
            <summary>
            プロシージャー実行による DbCommand の実行結果を取得します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.BindByName(System.Data.Common.DbCommand)">
            <summary>
            <para>BindByName プロパティの設定を行います。</para>
            <para>Oracleで名前付きパラメーターを利用したクエリの実行で必要になります。</para>
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            DbParameter オブジェクトの新しいインスタンスを作成します。
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="obj">パラメーター。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
            DbParameter オブジェクトの新しいインスタンスを作成します。
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object,System.Data.ParameterDirection)">
            <summary>
            DbParameter オブジェクトの新しいインスタンスを作成します。
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="obj">パラメーター。</param>
            <param name="direction">パラメーターの入出力方向。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            DbParameter オブジェクトの新しいインスタンスを作成します。
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="size">バッファサイズ。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object,System.Data.ParameterDirection)">
            <summary>
            DbParameter オブジェクトの新しいインスタンスを作成します。
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="size">バッファサイズ。</param>
            <param name="obj">パラメーター。</param>
            <param name="direction">パラメーターの入出力方向。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbCommandExtensions.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            DbParameter オブジェクトの新しいインスタンスを作成します。
            </summary>
            <param name="command">DbCommand オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="direction">パラメーターの入出力方向。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="T:Metroit.Data.Extensions.DbConnectionExtensions">
            <summary>
            DbConnection クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbConnectionExtensions.SetConnectionString(System.Data.Common.DbConnection,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            接続文字列の設定を行います。
            </summary>
            <param name="connection">DbConnection オブジェクト。</param>
            <param name="connectionValues">接続文字列。</param>
        </member>
        <member name="M:Metroit.Data.Extensions.DbConnectionExtensions.CreateCommand(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
            DbCommand オブジェクトを作成します。
            </summary>
            <param name="connection">DbConnection オブジェクト。</param>
            <param name="bindByName">名前付きパラメーターの使用を行うかどうか。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbConnectionExtensions.CreateCommand(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Boolean)">
            <summary>
            DbCommand オブジェクトを作成します。
            </summary>
            <param name="connection">DbConnection オブジェクト。</param>
            <param name="commandText">クエリ。</param>
            <param name="commandType">クエリの種類。</param>
            <param name="bindByName">名前付きパラメーターの使用を行うかどうか。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbConnectionExtensions.CreateQueryCommand(System.Data.Common.DbConnection,System.String)">
            <summary>
            通常クエリ発行用の DbCommand オブジェクトを作成します。
            </summary>
            <param name="connection">DbConnection オブジェクト。</param>
            <param name="commandText">クエリ。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbConnectionExtensions.CreateProcedureCommand(System.Data.Common.DbConnection,System.String)">
            <summary>
            プロシージャ発行用の DbCommand オブジェクトを作成します。
            </summary>
            <param name="connection">DbConnection オブジェクト。</param>
            <param name="commandText">プロシージャー名。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbConnectionExtensions.GetProviderFactory(System.Data.Common.DbConnection)">
            <summary>
            DbConnection に紐づいている DbProviderFactory を取得する。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="T:Metroit.Data.Extensions.DbExceptionExtensions">
            <summary>
            DbException クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbExceptionExtensions.GetNumber(System.Data.Common.DbException)">
            <summary>
            <para>データベースが検出した Number を取得します。</para>
            <para>Number が存在しない場合、int.MinValue を返却します。</para>
            </summary>
            <param name="exception">DbException オブジェクト。</param>
            <returns>Number</returns>
        </member>
        <member name="T:Metroit.Data.Extensions.DbTransactionExtensions">
            <summary>
            DbTransaction クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbTransactionExtensions.CreateCommand(System.Data.Common.DbTransaction,System.Boolean)">
            <summary>
            DbCommand オブジェクトを作成します。
            </summary>
            <param name="trans">DbTransaction オブジェクト。</param>
            <param name="bindByName">名前付きパラメーターの使用を行うかどうか。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbTransactionExtensions.CreateCommand(System.Data.Common.DbTransaction,System.String,System.Data.CommandType,System.Boolean)">
            <summary>
            DbCommand オブジェクトを作成します。
            </summary>
            <param name="trans">DbTransaction オブジェクト。</param>
            <param name="commandText">クエリ。</param>
            <param name="commandType">クエリの種類。</param>
            <param name="bindByName">名前付きパラメーターの使用を行うかどうか。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbTransactionExtensions.CreateQueryCommand(System.Data.Common.DbTransaction,System.String)">
            <summary>
            通常クエリ発行用の DbCommand オブジェクトを作成します。
            </summary>
            <param name="trans">DbTransaction オブジェクト。</param>
            <param name="commandText">クエリ。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbTransactionExtensions.CreateProcedureCommand(System.Data.Common.DbTransaction,System.String)">
            <summary>
            プロシージャ発行用の DbCommand オブジェクトを作成します。
            </summary>
            <param name="trans">DbTransaction オブジェクト。</param>
            <param name="commandText">プロシージャー名。</param>
            <returns>DbCommand オブジェクト。</returns>
        </member>
        <member name="T:Metroit.Data.Extensions.DbProviderFactoryExtensions">
            <summary>
            DbProviderFactory クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.DbProviderFactoryExtensions.CreateParameter(System.Data.Common.DbProviderFactory,System.String,System.Object)">
            <summary>
            DbProviderFactory に基づく DbParameter を生成します。
            </summary>
            <param name="providerFactory">DbProviderFactory オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="obj">パラメーター。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbProviderFactoryExtensions.CreateParameter(System.Data.Common.DbProviderFactory,System.String,System.Data.DbType)">
            <summary>
            DbProviderFactory に基づく DbParameter を生成します。
            </summary>
            <param name="providerFactory">DbProviderFactory オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbProviderFactoryExtensions.CreateParameter(System.Data.Common.DbProviderFactory,System.String,System.Data.DbType,System.Object,System.Data.ParameterDirection)">
            <summary>
            DbProviderFactory に基づく DbParameter を生成します。
            </summary>
            <param name="providerFactory">DbProviderFactory オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="obj">パラメーター。</param>
            <param name="direction">パラメーターの入出力方向。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbProviderFactoryExtensions.CreateParameter(System.Data.Common.DbProviderFactory,System.String,System.Data.DbType,System.Int32)">
            <summary>
            DbProviderFactory に基づく DbParameter を生成します。
            </summary>
            <param name="providerFactory">DbProviderFactory オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="size">バッファサイズ。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbProviderFactoryExtensions.CreateParameter(System.Data.Common.DbProviderFactory,System.String,System.Data.DbType,System.Int32,System.Object,System.Data.ParameterDirection)">
            <summary>
            DbProviderFactory に基づく DbParameter を生成します。
            </summary>
            <param name="providerFactory">DbProviderFactory オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="size">バッファサイズ。</param>
            <param name="obj">パラメーター。</param>
            <param name="direction">パラメーターの入出力方向。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="M:Metroit.Data.Extensions.DbProviderFactoryExtensions.CreateParameter(System.Data.Common.DbProviderFactory,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            DbProviderFactory に基づく DbParameter を生成します。
            </summary>
            <param name="providerFactory">DbProviderFactory オブジェクト。</param>
            <param name="parameterName">パラメーター名。</param>
            <param name="dbType">DbType 値。</param>
            <param name="direction">パラメーターの入出力方向。</param>
            <returns>DbParameter オブジェクト。</returns>
        </member>
        <member name="T:Metroit.Data.Extensions.ShouldDataRowImportArgs">
            <summary>
            DataRow へのデータ設定判断用の情報を提供します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Extensions.ShouldDataRowImportArgs.Name">
            <summary>
            項目名を取得します。
            </summary>
        </member>
        <member name="P:Metroit.Data.Extensions.ShouldDataRowImportArgs.Value">
            <summary>
            項目値を取得します。
            </summary>
        </member>
        <member name="M:Metroit.Data.Extensions.ShouldDataRowImportArgs.#ctor(System.String,System.Object)">
            <summary>
            新しい ShouldDataRowImportArgs インスタンスを生成します。
            </summary>
            <param name="name">項目名。</param>
            <param name="value">項目値。</param>
        </member>
        <member name="T:Metroit.Data.QueryBindVariableType">
            <summary>
            データベース固有のバインドパラメータ識別子を定義します。
            </summary>
        </member>
        <member name="F:Metroit.Data.QueryBindVariableType.AtmarkWithParam">
            <summary>
            @パラメータ名 を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.QueryBindVariableType.ColonWithParam">
            <summary>
            :パラメータ名 を示します。
            </summary>
        </member>
        <member name="F:Metroit.Data.QueryBindVariableType.Question">
            <summary>
            ? を示します。
            </summary>
        </member>
        <member name="T:Metroit.Data.QueryParameterOptimizer">
            <summary>
            クエリパラメータの最適化を提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.QueryParameterOptimizer.#ctor">
            <summary>
            MetDbParameterParser クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Metroit.Data.QueryParameterOptimizer.GetOptimizedText(System.String,Metroit.Data.QueryBindVariableType)">
            <summary>
            バインド変数タイプに応じて、クエリのパラメータ文字を最適化します。
            </summary>
            <param name="query">クエリ文字列。</param>
            <param name="bindVariableType">MetDbBindVariableType 列挙体。</param>
            <returns>最適化後のクエリ</returns>
        </member>
        <member name="M:Metroit.Data.QueryParameterOptimizer.optimize(System.String,System.String,System.Boolean)">
            <summary>
            クエリをパターン検索して、パラメータ部を最適化する。
            </summary>
            <param name="query">クエリ文字列。</param>
            <param name="sign">バインド変数タイプに応じた記号。</param>
            <param name="isPrefix">記号を接頭辞として扱うかどうか。</param>
            <returns>クエリ</returns>
        </member>
        <member name="T:Metroit.Data.ProcedureResult">
            <summary>
            プロシージャの実行結果を提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.ProcedureResult.#ctor">
            <summary>
            MetDbProcedureResult クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Metroit.Data.ProcedureResult.ReturnValue">
            <summary>
            戻り値を取得します。
            </summary>
        </member>
        <member name="P:Metroit.Data.ProcedureResult.Output">
            <summary>
            OUTPUT, INOUT の値を取得します。
            </summary>
        </member>
        <member name="T:Metroit.Data.QueryBuilder">
            <summary>
            クエリ文字列の編集を提供します。
            </summary>
        </member>
        <member name="M:Metroit.Data.QueryBuilder.#ctor">
            <summary>
            MetQueryBuilder クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Metroit.Data.QueryBuilder.#ctor(System.String)">
            <summary>
            新しい MetQueryBuilder のインスタンスを生成します。
            </summary>
            <param name="query">クエリ文字列。</param>
        </member>
        <member name="P:Metroit.Data.QueryBuilder.Query">
            <summary>
            クエリ文字列の取得または設定します。
            </summary>
        </member>
        <member name="P:Metroit.Data.QueryBuilder.ReplaceQueries">
            <summary>
            /* key */ で差し替える設定値の値を取得または設定します。
            </summary>
        </member>
        <member name="P:Metroit.Data.QueryBuilder.AddQueries">
            <summary>
            末尾に追加するクエリ文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:Metroit.Data.QueryBuilder.InsertQueries">
            <summary>
            先頭に挿入するクエリ文字列を取得または設定します。
            </summary>
        </member>
        <member name="M:Metroit.Data.QueryBuilder.Build">
            <summary>
            設定したクエリ情報を展開し、クエリを生成します。
            </summary>
            <returns>クエリ文字列</returns>
        </member>
        <member name="M:Metroit.Data.QueryBuilder.Build(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            差し替え設定した情報を展開し、クエリ文字列を生成します。
            </summary>
            <param name="query">クエリ文字列</param>
            <param name="replaceQueries">/* key */ で差し替える設定値</param>
            <returns>クエリ文字列</returns>
        </member>
    </members>
</doc>
