<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptNegativeCanNotChange" xml:space="preserve">
    <value>Value is negative and can not be changed.</value>
  </data>
  <data name="AcceptNegativeCanNotChange.ja" xml:space="preserve">
    <value>Valueが負数のため、変更できません。</value>
  </data>
  <data name="CannotUseOverlayControl" xml:space="preserve">
    <value>{0} cannot be overlaid.</value>
  </data>
  <data name="CannotUseOverlayControl.ja" xml:space="preserve">
    <value>{0} はオーバーレイできません。</value>
  </data>
  <data name="ControlIsNotOnForm" xml:space="preserve">
    <value>The control is not placed on a form.</value>
  </data>
  <data name="ControlIsNotOnForm.ja" xml:space="preserve">
    <value>このコントロールはフォームに配置されていません。</value>
  </data>
  <data name="DeniedTextException" xml:space="preserve">
    <value>An unacceptable value has been set.</value>
  </data>
  <data name="DeniedTextException.ja" xml:space="preserve">
    <value>許可されない値が設定されました。</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>{0} is empty.</value>
  </data>
  <data name="Empty.ja" xml:space="preserve">
    <value>{0} が空です。</value>
  </data>
  <data name="IndexMustFrom" xml:space="preserve">
    <value>The index must start from {0}.</value>
  </data>
  <data name="IndexMustFrom.ja" xml:space="preserve">
    <value>インデックスは {0} から始まらなければなりません。</value>
  </data>
  <data name="IndexTooLarge" xml:space="preserve">
    <value>The index is too large.</value>
  </data>
  <data name="IndexTooLarge.ja" xml:space="preserve">
    <value>インデックスが大きすぎます。</value>
  </data>
  <data name="InvalidIndex" xml:space="preserve">
    <value>Cannot be set to less than {0}.</value>
  </data>
  <data name="InvalidIndex.ja" xml:space="preserve">
    <value>{0} 未満は設定できません。</value>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>An unacceptable value has been set.</value>
  </data>
  <data name="InvalidValue.ja" xml:space="preserve">
    <value>許可されない文字列が設定されました。</value>
  </data>
  <data name="KeysConverterInvalidKeyCombination" xml:space="preserve">
    <value>Key combination is not valid.</value>
  </data>
  <data name="KeysConverterInvalidKeyCombination.ja" xml:space="preserve">
    <value>キーの組み合わせが有効ではありません。</value>
  </data>
  <data name="MaxValueSmallerCanNotChange" xml:space="preserve">
    <value>Values larger than MaxValue can not be set.</value>
  </data>
  <data name="MaxValueSmallerCanNotChange.ja" xml:space="preserve">
    <value>MaxValueの値より小さい値は設定できません。</value>
  </data>
  <data name="MinValueSmallerCanNotChange" xml:space="preserve">
    <value>Values smaller than MinValue can not be set.</value>
  </data>
  <data name="MinValueSmallerCanNotChange.ja" xml:space="preserve">
    <value>MinValueの値より小さい値は設定できません。</value>
  </data>
  <data name="NotSupportedColor" xml:space="preserve">
    <value>Invalid color.</value>
  </data>
  <data name="NotSupportedColor.ja" xml:space="preserve">
    <value>無効な色です。</value>
  </data>
  <data name="OverlayAlreadyDisplayed" xml:space="preserve">
    <value>The overlay is already displayed.</value>
  </data>
  <data name="OverlayAlreadyDisplayed.ja" xml:space="preserve">
    <value>オーバーレイは表示済みです。</value>
  </data>
  <data name="UnableFindParentForm" xml:space="preserve">
    <value>I can't get the parent form of {0}.</value>
  </data>
  <data name="UnableFindParentForm.ja" xml:space="preserve">
    <value>{0} の親フォームが取得できません。</value>
  </data>
  <data name="ValueLargerCanNotChange" xml:space="preserve">
    <value>Values larger than Value can not be set.</value>
  </data>
  <data name="ValueLargerCanNotChange.ja" xml:space="preserve">
    <value>Valueの値より大きい値は設定できません。</value>
  </data>
  <data name="ValueSmallerCanNotChange" xml:space="preserve">
    <value>Values smaller than Value can not be set.</value>
  </data>
  <data name="ValueSmallerCanNotChange.ja" xml:space="preserve">
    <value>Valueの値より小さい値は設定できません。</value>
  </data>
</root>